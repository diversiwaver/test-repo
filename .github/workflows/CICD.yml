name: CICD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  Build:
    runs-on: windows-latest
    environment: 
      name: Development
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install .NET 7.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x.x'
      - name: Build
        shell: bash
        run: |
          dotnet tool install --global dotnet-releaser
          dotnet-releaser build --github-token "${{secrets.GITHUB_TOKEN}}" src/dotnet-releaser-build.toml
          #new_version=$(echo "${{ github.ref }}" | sed -E 's/refs\/tags\/v([0-9]+\.[0-9]+\.[0-9]+)/\1/')
          #dotnet pack WebAPI.DTOs/WebApi.DTO.csproj -o nuget --version $new_version --no-build
          #dotnet publish WebApi.DTOs/bin/Release/WebApi.DTOs.$new_version.nupkg --api-key ${{ secrets.NUGET_TOKEN }} --source https://nuget.pkg.github.com/diversiwaver/index.json
  publish:
    name: build, pack & publish
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      # - name: Setup dotnet
      #   uses: actions/setup-dotnet@v1
      #   with:
      #     dotnet-version: 3.1.200

      # Publish
      - name: publish on version change
        id: publish_nuget
        uses: brandedoutcast/publish-nuget@v2
        with:
          # Filepath of the project to be packaged, relative to root of repository
          PROJECT_FILE_PATH: WebAPI.DTOs/WebAPI.DTO.csproj

          # Configuration to build and package
          BUILD_CONFIGURATION: Release

          # Platform target to compile (default is empty/AnyCPU)
          BUILD_PLATFORM: x64

          # NuGet package id, used for version detection & defaults to project name
          PACKAGE_NAME: WebAPI.DTOs

          # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
          # VERSION_FILE_PATH: Directory.Build.props

          # Regex pattern to extract version info in a capturing group
          VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$

          # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
          VERSION_STATIC: 1.0.0

          # Flag to toggle git tagging, enabled by default
          TAG_COMMIT: true

          # Format of the git tag, [*] gets replaced with actual version
          TAG_FORMAT: v*

          # API key to authenticate with NuGet server
          NUGET_KEY: ${{secrets.NUGET_TOKEN}}

          # NuGet server uri hosting the packages, defaults to https://api.nuget.org
          NUGET_SOURCE: https://nuget.pkg.github.com/diversiwaver/index.json

          # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
          # INCLUDE_SYMBOLS: false
  DeployDev:
    runs-on: windows-latest
    environment: 
      name: Development
    needs: [Build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install .NET 7.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x.x'
      - name: Test
        shell: bash
        run: |
          dotnet tool install --global dotnet-releaser
          dotnet-releaser run --github-token "${{secrets.GITHUB_TOKEN}}" src/dotnet-releaser-test.toml
  DeployProd:
    name: Deploy to Production 
    needs: [DeployDev]
    runs-on: windows-latest
    environment: 
      name: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install .NET 7.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x.x'
      - name: Release
        shell: bash
        run: |
          dotnet tool install --global dotnet-releaser
          dotnet-releaser run --github-token "${{secrets.GITHUB_TOKEN}}" src/dotnet-releaser-release.toml
          #TAG=$(git describe --tags)
          #dotnet pack test-repo/WebApi.DTOs --version $TAG
          #dotnet publish test-repo/WebApi.DTOs/bin/Release/WebApi.DTOs.$TAG.nupkg --api-key ${{ secrets.NUGET_TOKEN }} --source https://nuget.pkg.github.com/OWNER/index.json

          TAG=$(git describe --tags || echo "0.0.0")
          dotnet pack test-repo/WebApi.DTOs --version $TAG
          PACKAGES=$(dotnet nuget list -p test-repo/WebApi.DTOs/bin/Release -k ${{ secrets.GITHUB_TOKEN }} -s https://nuget.pkg.github.com/OWNER/index.json -o packages WebApi.DTOs)


          #If no Nuget packages are found, use the default version number "0.0.0"
          if [ -z "$PACKAGES" ]; then
            VERSION="0.0.0"
          else
            # Otherwise, get the latest version number from the list of Nuget packages
            VERSION=$(echo "$PACKAGES" | head -n 1 | awk '{print $1}')
          fi

          # Increment the version number of the Nuget package
          dotnet increment-version --version $VERSION test-repo/WebApi.DTOs/bin/Release/WebApi.DTOs.$TAG.nupkg

          # Publish the Nuget package to GitHub Packages
          dotnet publish test-repo/WebApi.DTOs/bin/Release/WebApi.DTOs.$TAG.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source https://nuget.pkg.github.com/OWNER/index.json
